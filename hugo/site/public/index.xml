<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>留白</title>
    <link>/public/</link>
    <description>Recent content on 留白</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 Jun 2022 17:49:00 +0800</lastBuildDate><atom:link href="/public/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>K8S服务</title>
      <link>/public/k8s/k8s%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Sat, 04 Jun 2022 17:49:00 +0800</pubDate>
      
      <guid>/public/k8s/k8s%E6%9C%8D%E5%8A%A1/</guid>
      <description>五种服务类型 向外发布服务
 ClusterIP NodePort LoadBalancer  向内发布服务
 无头服务 ExternalName  两种服务发现方式   环境变量
  DNS服务器
  ClusterIP  通过kube-proxy组件实现负载均衡 自动分配集群IP  # https://kubernetes.io/docs/concepts/services-networking/service/ apiVersion: v1 kind: Service metadata:  name: service-simple-service spec:  selector:  app: service-simple-app  ports:  - protocol: TCP  port: 80  targetPort: 8080 NodePort  基于ClusterIP模式 端口范围：30000-32767  # https://kubernetes.io/docs/concepts/services-networking/service/#nodeport apiVersion: v1 kind: Service metadata:  name: service-node-port-service spec:  type: NodePort  selector:  app: MyApp  ports:  - port: 80 # By default and for convenience, the `targetPort` is set to the same value as the `port` field.</description>
    </item>
    
    <item>
      <title>kubeadm部署k8s集群</title>
      <link>/public/k8s/kubeadm%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Thu, 02 Jun 2022 23:25:00 +0800</pubDate>
      
      <guid>/public/k8s/kubeadm%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4/</guid>
      <description>官方部署文档
一、环境准备  准备两台全新的虚拟机     主机名 IP 系统类型 配置     master 192.168.66.100 centos7.6 2c2g   node1 192.168.66.101 centos7.6 2c2g    配置主机名  hostnamectl set-hostname master  [root@master ~]# cat /etc/hosts 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6  192.168.66.100 master 192.168.66.101 node1 网卡配置  VMware网络适配器选择NAT模式，网卡配置为静态IP
[root@master ~]# cat /etc/sysconfig/network-scripts/ifcfg-ens33  TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no BOOTPROTO=static DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=ens33 UUID=443eb4f6-645e-4eee-ab28-21f5cde8026f DEVICE=ens33 ONBOOT=yes IPADDR=192.</description>
    </item>
    
    <item>
      <title>Ingress-nginx中如何配置自定义响应头</title>
      <link>/public/k8s/ingress-nginx%E4%B8%AD%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E5%93%8D%E5%BA%94%E5%A4%B4/</link>
      <pubDate>Fri, 06 May 2022 10:26:00 +0800</pubDate>
      
      <guid>/public/k8s/ingress-nginx%E4%B8%AD%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E5%93%8D%E5%BA%94%E5%A4%B4/</guid>
      <description>官方文档：https://kubernetes.github.io/ingress-nginx/
方式一 通过Ingress注释配置，add_header指令会映射到nginx配置文件中的localtion模块中，只对单个服务生效
https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#configuration-snippet
示例：
apiVersion: extensions/v1betal kind: Ingress metadata:  annotations:  kubernetes.io/ingress.class: nginx  nginx.ingress.kubernetes.io/configuration-snippet: | add_header &amp;#34;**&amp;#34; &amp;#34;**&amp;#34;; spec:  rules:  ** 方式二 将配置存储在configmap中，在Ingress中间接引用，此方式会将add_header指令映射到nginx配置文件中的http模块中，对所有服务生效
https://kubernetes.github.io/ingress-nginx/examples/customization/custom-headers/
示例：
自定义custom-headers文件，存储响应头
apiVersion: v1 kind: ConfigMap metadata:  name: custom-headers  namespace: ingress-nginx data:  X-Different-Name: &amp;#34;true&amp;#34;  X-Using-Nginx-Controller: &amp;#34;true&amp;#34; 在Ingress-nginx默认配置文件中，间接引用custom-headers
apiVersion: v1 kind: ConfigMap metadata:  name: ingress-nginx-controller  namespace: ingress-nginx data:  add-headers: &amp;#34;ingress-nginx/custom-headers&amp;#34; 注意事项  方式二修改配置文件后，需要重启nginx-ingress-controller，配置才能生效！ 由于nginx指令add_header的继承性问题，两种方式不能同时配置，否则方式二会失效！请参考：https://juejin.cn/post/6844904041126838286  </description>
    </item>
    
    <item>
      <title>解决Ingress-nginx路由配置问题</title>
      <link>/public/k8s/%E8%A7%A3%E5%86%B3ingress-nginx%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 06 May 2022 09:33:00 +0800</pubDate>
      
      <guid>/public/k8s/%E8%A7%A3%E5%86%B3ingress-nginx%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/</guid>
      <description>Ingress-nginx路由配置 官方文档：https://kubernetes.github.io/ingress-nginx/examples/rewrite/
静态文件404问题 https://www.qikqiak.com/post/url-rewrite-on-ingress-nginx/
https://stackoverflow.com/questions/50871970/kubernetes-ingress-nginx-loading-resources-404
配置示例 kind: Ingress apiVersion: extensions/v1beta1 metadata:  name: **  namespace: **  annotations:  kubernetes.io/ingress.class: nginx  nginx.ingress.kubernetes.io/rewrite-target: /$1	# $1为正则匹配占位符  nginx.ingress.kubernetes.io/configuration-snippet: | rewrite ^/css/(.*)$ /app/css/$1 redirect; # 给静态文件目录添加app前缀 spec:  rules:  - host: **  http:  paths:  - path: /app/(.*)	# 添加app路径，以路径区别后端服务  pathType: Prefix  backend:  serviceName: **  servicePort: 80 注意事项 后端对静态资源的引用，要删除前导斜杠
如: &amp;lt;script src=/public/js/example.js&amp;gt;&amp;lt;/script&amp;gt; 删除前导斜杠: &amp;lt;script src=js/example.</description>
    </item>
    
  </channel>
</rss>
